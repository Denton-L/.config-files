"define $VIMHOME
let $VIMHOME=expand('<sfile>:p:h')

"more history
set history=2000

"line numbering
set number
set relativenumber

"tab defaults
set autoindent
set tabstop=4
set shiftwidth=4
set smarttab

"wrap lines
set linebreak

"set display options
set scrolloff=1
set sidescrolloff=5
set display+=lastline

"statusline defaults
set laststatus=2
set ruler

"enable completion for command-line
set wildmenu
set wildmode=longest:full

"change spellcheck to english
set spelllang=en

"use only one space between sentences
set nojoinspaces

"enable sensible splits
set splitbelow
set splitright

"indent by filetype
filetype plugin indent on

"enable syntax highlighting
syntax on

"search defaults
set incsearch

"delete comment character when joining commented lines
set formatoptions+=j

"automatically re-read file if changed
set autoread

"disable the mouse
set mouse=

"set the listchars
set listchars=tab:>-,trail:~,extends:>,precedes:<,nbsp:+

"define thesaurus
set thesaurus+=$VIMHOME/thesauruses/mthesaur.txt

"allow switching from modified buffers
set hidden

"look for tags in parent folders
set tags=tags;/

"search for files recursively
set path+=**

"use vi-like backspace
set backspace=

"use blowfish2 as default encryption method
try
	set cryptmethod=blowfish2
catch
endtry

"change timeout settings
set notimeout
set ttimeout
set ttimeoutlen=0

"toggle highlighting on <Leader>c
nnoremap <Leader>c :set hlsearch! hlsearch?<CR>

"auto-indent code on cu (clean up)
nnoremap cu gg=G``zz

"map F3 to toggle spellcheck
nnoremap <F3> :set spell! spell?<CR>

"search selection with Leader-s
nnoremap <Leader>s *N
vnoremap <Leader>s y/<C-r>"<CR>``

"navigate wrapped lines with ease
nnoremap <expr> j v:count ? 'j' : 'gj'
nnoremap <expr> k v:count ? 'k' : 'gk'
nnoremap <expr> <Up> v:count ? 'k' : 'gk'
nnoremap <expr> <Down> v:count ? 'j' : 'gj'

"remove trailing spaces with Leader-t
nnoremap <Leader>t :%s/\s\+$//<CR>:nohlsearch<CR>

"break undoing sequence when doing deletes
inoremap <C-u> <C-g>u<C-u>
inoremap <C-w> <C-g>u<C-w>

"allow <C-z> in insert mode
inoremap <C-z> <C-o><C-z>

"auto-source *vimrc on save
augroup vimrc_source
	autocmd!
	autocmd BufWritePost *vimrc source %
augroup END

"make Y behave like D and C
nnoremap Y y$

"smarter tabline
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_close_button = 0

"default to straight separators
let g:airline_symbols_ascii = 1
let g:airline_left_sep = ' '
let g:airline_left_alt_sep = '|'
let g:airline_right_sep = ' '
let g:airline_right_alt_sep = '|'

"make : faster
nnoremap <Enter> :
vnoremap <Enter> :
"unmap in cmdwin
augroup cmdwin_enter
	autocmd!
	autocmd CmdwinEnter * nunmap <Enter>
	autocmd CmdwinLeave * nnoremap <Enter> :
augroup END

"make buffer navigation faster
nnoremap <C-j> :bnext<CR>
nnoremap <C-k> :bprevious<CR>

"make go and gO start at the beginning of the line
nnoremap go o<Esc>0C
nnoremap gO O<Esc>0C

"make S start from the beginning of the line
nnoremap S S<Esc>0C
vnoremap S S<Esc>0C

"make <Leader>o/O open (unjoin) lines
nnoremap <Leader>o i<CR><Esc>
nnoremap <Leader>O a<CR><Esc>

"make <Leader>d clear lines
nnoremap <Leader>d 0D

"make dm and cm (eliMinate) delete into blackhole register
nnoremap dm "_d
nnoremap dmm "_dd
nnoremap dM "_D
nnoremap cm "_c
nnoremap cmm "_cc
nnoremap cM "_C

"make dc and yc go to clipboard
nnoremap dc "+d
nnoremap dcc "+dd
nnoremap dC "+D
nnoremap yc "+y
nnoremap ycc "+yy
nmap yC "+Y

"ensure visual mode $ doesn't delete newline
vnoremap $ $h

"save to temporary file
command! MkTemp execute (bufname('%') == '' ? 'write' : 'saveas') . '! ' . system('mktemp')

"hex-editing tools
command! HexDump %!xxd

function! UnHexDump()
	silent! %substitute/\C^[0-9a-f]*:\(\%( [0-9a-f]\{1,4}\)* *\)  .*$/\1/
	%!xxd -r -p
endfunction
command! UnHexDump call UnHexDump()
